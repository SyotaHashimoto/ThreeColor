論文の改訂のメモ (2021.10.06)

主な変更点
- 述語 Cpos は廃止，関数 cpos に変更
- 公理 C_uniq,C_mix,C_exists,C_paint は削除
- C_paint は矛盾しているので削除
- C_uniq,C_exists は不要 (関数なので自動的に満たされる)
- C_mix は F_mix に変更 (関数としての条件)

1章
「そこで，…形式化した」を修正 (他にもあるかも)
見直してみて修正が必要そうな所のみチェックしておく


2章
三色三角形を定義する (規則通りに色を塗った三角形)
それ以外はそのまま

3章
3.1
目標：「WellColoredTriangleF x n の定義を与える」
- 定義3.6(Cpos) は削除
- cpos(x,y) を使う．キモチは「三角形の座標(x,y)の色が cpos(x,y)」
- 定義3.3 の手前に方針を書く
  色塗りを表現する関数 cpos を用いる
- cpos, F_mix (三色三角形だ), TriangleF (三頂点が調和性をみたす) を定義する

3.2は削除．次が新しい3.2
目標：「最上段の色塗りを拡張して全体の色塗り関数を定義できる」
- colorYBBY, colorBYBなどは最上段の色塗り
- Fixpoint F の定義と性質 (F のネーミング…)
   F f 
A' ---> Color
|        |
A -------|   とか？
    f

3.3 は修正する
- falseColor は削除

4章
4.1 十分条件：修正

4.2 必要条件：修正
- 全体的な流れは同じ (3つの補題を示すとか)

5 議論
目標：これで得られた知見をまとめる (読者との情報共有)
- 形式化の最初の方針が肝心．上手い選択をすると証明の行数が大幅に削減できる
- 述語はやめる．関数で書けるならそっちの方がよい．
--- 自然と rewrite を使うことになるので ssreflect の利点を生かすことになる．
- できることなら Prop でなく bool で統一した方が ssreflect の利点が生きる
--- 関数定義をする際に if 文を用いると条件は bool 型を要求されるため，
--- 条件部分の述語は Prop 型でなく bool 型で最初から定義するとよい
-- forall や exists が入った論理式は無理そう
-- この理由により F_mix は bool にはできなかった
-- WellColoredTriangleF は F_mix を含むので bool にできなかった
- 紙に証明を書いてから実装するべし
-- 証明の設計は大事．全体の方針が見えるように上手く補題を立てるべし

6 まとめ
- 関数 cpos を基にした三角形三色問題の形式化をした
